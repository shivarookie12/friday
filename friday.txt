#include <LiquidCrystal.h>
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
int led = 13;
int fan =10;
int led_flag=0,fan_flag=0;
//Arrays for the 4 inputs**********************************************
float sensorValue[4] = {0,0,0,0};
float voltageValue[4] = {0,0,0,0};

//Char used for reading in Serial characters
char inbyte = 0;
//*******************************************************************************************
String readString;
void setup() {
// initialise serial communications at 9600 bps:
lcd.begin(16,2);
lcd.clear();
lcd.setCursor(1,0);
lcd.print("HOME AUTOMATION");
lcd.setCursor(1,1);
lcd.print("shiva siva velu");
delay(1000);
lcd.clear();
Serial.begin(9600);
  pinMode(led, OUTPUT);
digitalWrite(led, HIGH);
}

void loop() {
lcd.setCursor(1,0);
lcd.print("HOME STATUS");
delay(3000);
lcd.clear();
lcd.print("CURRENT STATUS");
delay(3000);
lcd.clear();
  //when serial values have been received this will be true
  while (Serial.available()) {
  delay(10);  //small delay to allow input buffer to fill

  char c = Serial.read();  //gets one byte from serial buffer
  if (c == ',') {
    break;
  }  
  if(c!='x'){
  //breaks out of capture loop to print readstring
  readString += c;
  }
} //makes the string readString 
  if (readString =="all system on")
  {  led_flag=1;
  fan_flag=1;
   sendAndroidValues("successfully turned on all the system sir");
    digitalWrite(led, HIGH);
    digitalWrite(fan, HIGH);
    lcd_disp("successfully turned on all the system sir");
  }
  else if (readString =="all system off")
  {  led_flag=0;
  fan_flag=0;
   sendAndroidValues("successfully turned off all the system sir");
    digitalWrite(led, LOW);
    digitalWrite(fan, LOW);
    lcd_disp("successfully turned off all the system sir");
  }
else if (readString =="all system off except fan")
  {  led_flag=0;
  fan_flag=1;
   sendAndroidValues("successfully turned off all the system except fan sir");
    digitalWrite(led, LOW);
    digitalWrite(fan, HIGH);
    lcd_disp("successfully turned off all the system except fan sir");
  }
else if (readString =="all system off except light")
  {  led_flag=1;
  fan_flag=0;
   sendAndroidValues("successfully turned off all the system except light sir");
    digitalWrite(led, HIGH);
    digitalWrite(fan, LOW);
    lcd_disp("successfully turned off all the system except light sir");
  }
 else if (readString =="turn on the front lights"||readString=="lights on"||readString=="switch on the light"||readString=="turn on the lights")
  {  led_flag=1;
   sendAndroidValues("successfully turned on the light sir");
    digitalWrite(led, HIGH);
    lcd_disp("LIGHT IS ON");
  }
  else if (readString =="turn off the front lights"||readString=="lights off"||readString=="switch off the light"||readString=="turn off the lights")
  {led_flag=0;
    sendAndroidValues("successfully turned off the light sir");
    digitalWrite(led, LOW);
    lcd_disp("LIGHT IS OFF");
  }
  else if (readString =="turn on the fan"||readString=="fan on"||readString=="switch on the fan"||readString=="turn on fan")
  {  fan_flag=1;
    sendAndroidValues("successfully turned on the fan sir");
    digitalWrite(fan, HIGH);
    lcd_disp("FAN IS ON");
  }
  else if (readString =="turn on the fan"||readString=="fan on"||readString=="switch on the fan"||readString=="turn on fan")
  {  fan_flag=0;
    sendAndroidValues("successfully turned off the fan sir");
    digitalWrite(fan, LOW);
     lcd_disp("FAN IS OFF");
  }
  else if(readString =="status")
  {
    if(led_fag)
    {
      sendAndroidValues("LED IS ON MODE");
      lcd_disp("LED IS ON MODE");
    }
    if(led_fag==0)
    {
      sendAndroidValues("LED IS OFF MODE");
      lcd_disp("LED IS OFF MODE");
    }
    if(fan_fag)
    {
      sendAndroidValues("FAN IS ON MODE");
      lcd_disp("FAN IS ON MODE");
    }
    if(fan_fag==0)
    {
      sendAndroidValues("FAN IS OFF MODE");
      lcd_disp("FAN IS OFF MODE");
    }
      }
  else if (readString.length() >0) {
  sendAndroidValues(readString); //prints string to serial port out

  readString=""; //clears variable for new input
}
readString="";

//delay by 2s. Meaning we will be sent values every 2s approx
//also means that it can take up to 2 seconds to change LED state
delay(2000);
}

//sends the values from the sensor over serial to BT module
void sendAndroidValues(String f)
{
//puts # before the values so our app knows what to do with the data
Serial.print('#');
Serial.print(f);
Serial.print('~');
Serial.println();
f="";
delay(10);        
//added a delay to eliminate missed transmissions
}
void lcd_disp(String g)
{
  
lcd.clear();
lcd.setCursor(1,0);
lcd.print(g);
}
}
